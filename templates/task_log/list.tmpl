{{define "task_log/list.tmpl"}}
{{template "header" .}}
{{template "common/alert.tmpl" .}}

<div>
  <!-- 页面标题 -->
  <div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="h3 mb-0">
      <i class="bi bi-journal-text me-2"></i>任务日志
    </h1>
  </div>

  <!-- 搜索和过滤 -->
  <div class="card mb-4">
    <div class="card-body">
      <div class="row g-3">
        <div class="col-md-3">
          <select class="form-select" id="statusFilter">
            <option value="">全部状态</option>
            <option value="success">成功</option>
            <option value="failed">失败</option>
            <option value="running">运行中</option>
            <option value="killed">已终止</option>
            <option value="pending">等待中</option>
            <option value="skipped">跳过</option>
          </select>
        </div>
        <div class="col-md-3">
          <select class="form-select" id="executionTypeFilter">
            <option value="">全部类型</option>
            <option value="scheduled">调度执行</option>
            <option value="manual">手动执行</option>
          </select>
        </div>
        <div class="col-md-3">
          <input type="text" 
                 class="form-control" 
                 id="taskNameFilter" 
                 placeholder="任务名称">
        </div>
        <div class="col-md-3">
          <div class="d-flex gap-2">
            <button type="button" 
                    class="btn btn-primary" 
                    onclick="searchTaskLogs()">
              <i class="bi bi-search me-1"></i>搜索
            </button>
            <button type="button" 
                    class="btn btn-outline-secondary" 
                    onclick="refreshTaskLogs()">
              <i class="bi bi-arrow-clockwise me-1"></i>重置
            </button>
          </div>
        </div>
      </div>
      
      <div class="row g-3 mt-2">
        <div class="col-md-3">
          <input type="date" 
                 class="form-control" 
                 id="dateFromFilter" 
                 placeholder="开始日期">
        </div>
        <div class="col-md-3">
          <input type="date" 
                 class="form-control" 
                 id="dateToFilter" 
                 placeholder="结束日期">
        </div>
      </div>
    </div>
  </div>

  <!-- 任务日志列表 -->
  <div class="card">
    <div class="card-body p-0">
      <div class="table-responsive">
        <table class="table table-hover mb-0" id="taskLogsTable">
          <thead class="table-light">
            <tr>
              <th width="8%">ID</th>
              <th width="20%">任务名称</th>
              <th width="10%">状态</th>
              <th width="12%">执行方式</th>
              <th width="15%">开始时间</th>
              <th width="15%">结束时间</th>
              <th width="10%">持续时间</th>
              <th width="10%">操作</th>
            </tr>
          </thead>
          <tbody id="taskLogsTableBody">
            <!-- 数据将通过JavaScript动态加载 -->
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <!-- 分页 -->
  <nav aria-label="任务日志分页" class="mt-4">
    <ul class="pagination justify-content-center" id="pagination">
      <!-- 分页按钮将通过JavaScript动态生成 -->
    </ul>
  </nav>
</div>

<!-- 日志详情模态框 -->
<div class="modal fade" id="logDetailModal" tabindex="-1" aria-labelledby="logDetailModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-xl">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="logDetailModalLabel">
          <i class="bi bi-file-text me-2"></i>日志详情
        </h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div id="logDetailContent">
          <!-- 日志详情内容将通过JavaScript动态加载 -->
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">关闭</button>
        <button type="button" class="btn btn-outline-primary" onclick="copyLogContent()">
          <i class="bi bi-clipboard me-1"></i>复制日志
        </button>
      </div>
    </div>
  </div>
</div>

<script>
let currentPage = 1;
let totalPages = 1;
let currentLogContent = '';

// 页面加载完成后初始化
document.addEventListener('DOMContentLoaded', function() {
  loadTaskLogs();
  
  // 绑定搜索事件
  document.getElementById('statusFilter').addEventListener('change', searchTaskLogs);
  document.getElementById('executionTypeFilter').addEventListener('change', searchTaskLogs);
  document.getElementById('taskNameFilter').addEventListener('input', searchTaskLogs);
  document.getElementById('dateFromFilter').addEventListener('change', searchTaskLogs);
  document.getElementById('dateToFilter').addEventListener('change', searchTaskLogs);
});

function loadTaskLogs(page = 1) {
  const status = document.getElementById('statusFilter').value;
  const executionType = document.getElementById('executionTypeFilter').value;
  const taskName = document.getElementById('taskNameFilter').value;
  const dateFrom = document.getElementById('dateFromFilter').value;
  const dateTo = document.getElementById('dateToFilter').value;
  
  const params = new URLSearchParams({
    page: page,
    status: status,
    execution_type: executionType,
    task_name: taskName,
    date_from: dateFrom,
    date_to: dateTo
  });
  
  fetch(`/api/task-logs?${params}`)
    .then(response => response.json())
    .then(data => {
      renderTaskLogs(data.logs || []);
      renderPagination(data.pagination || {});
    })
    .catch(error => {
      console.error('加载任务日志失败:', error);
      showAlert('加载任务日志失败', 'danger');
    });
}

function renderTaskLogs(logs) {
  const tbody = document.getElementById('taskLogsTableBody');
  
  if (logs.length === 0) {
    tbody.innerHTML = `
      <tr>
        <td colspan="8" class="text-center text-muted py-5">
          <i class="bi bi-inbox display-4 d-block mb-3"></i>
          <h5>暂无日志</h5>
          <p class="mb-0">没有找到符合条件的任务日志</p>
        </td>
      </tr>
    `;
    return;
  }
  
  tbody.innerHTML = logs.map(log => `
    <tr>
      <td class="fw-semibold">${log.id}</td>
      <td>
        <div class="d-flex align-items-center">
          <i class="bi bi-file-earmark-text me-2 text-muted"></i>
          <span class="fw-medium">${log.task_name || '未知任务'}</span>
        </div>
      </td>
      <td>
        <span class="badge bg-${getStatusBadgeClass(log.status)}">
          ${getStatusText(log.status)}
        </span>
      </td>
      <td>
        <span class="badge bg-${log.execution_type === 'manual' ? 'primary' : 'info'}">
          ${log.execution_type === 'manual' ? '手动执行' : '调度执行'}
        </span>
      </td>
      <td>
        <small class="text-muted">${formatDateTime(log.start_time)}</small>
      </td>
      <td>
        <small class="text-muted">${log.end_time ? formatDateTime(log.end_time) : '-'}</small>
      </td>
      <td>
        <small class="text-muted">${log.duration || '-'}</small>
      </td>
      <td>
        <div class="btn-group btn-group-sm" role="group">
          <button type="button" 
                  class="btn btn-outline-primary btn-sm" 
                  onclick="viewLogDetail(${log.id})"
                  title="查看详情">
            <i class="bi bi-eye me-1"></i>详情
          </button>
          ${log.status === 'running' ? `
            <button type="button" 
                    class="btn btn-outline-danger btn-sm" 
                    onclick="killTask(${log.id})"
                    title="终止任务">
              <i class="bi bi-stop me-1"></i>终止
            </button>
          ` : ''}
        </div>
      </td>
    </tr>
  `).join('');
}

function renderPagination(pagination) {
  const paginationEl = document.getElementById('pagination');
  currentPage = pagination.current_page || 1;
  totalPages = pagination.total_pages || 1;
  
  if (totalPages <= 1) {
    paginationEl.innerHTML = '';
    return;
  }
  
  let paginationHTML = '';
  
  // 上一页
  if (currentPage > 1) {
    paginationHTML += `
      <li class="page-item">
        <a class="page-link" href="#" onclick="loadTaskLogs(${currentPage - 1}); return false;">
          <i class="bi bi-chevron-left"></i>
        </a>
      </li>
    `;
  }
  
  // 页码
  const startPage = Math.max(1, currentPage - 2);
  const endPage = Math.min(totalPages, currentPage + 2);
  
  for (let i = startPage; i <= endPage; i++) {
    paginationHTML += `
      <li class="page-item ${i === currentPage ? 'active' : ''}">
        <a class="page-link" href="#" onclick="loadTaskLogs(${i}); return false;">${i}</a>
      </li>
    `;
  }
  
  // 下一页
  if (currentPage < totalPages) {
    paginationHTML += `
      <li class="page-item">
        <a class="page-link" href="#" onclick="loadTaskLogs(${currentPage + 1}); return false;">
          <i class="bi bi-chevron-right"></i>
        </a>
      </li>
    `;
  }
  
  paginationEl.innerHTML = paginationHTML;
}

function searchTaskLogs() {
  currentPage = 1;
  loadTaskLogs(1);
}

function refreshTaskLogs() {
  document.getElementById('statusFilter').value = '';
  document.getElementById('executionTypeFilter').value = '';
  document.getElementById('taskNameFilter').value = '';
  document.getElementById('dateFromFilter').value = '';
  document.getElementById('dateToFilter').value = '';
  searchTaskLogs();
}

function viewLogDetail(logId) {
  fetch(`/api/task-logs/${logId}`)
    .then(response => response.json())
    .then(data => {
      currentLogContent = data.content || '';
      document.getElementById('logDetailContent').innerHTML = `
        <div class="mb-3">
          <h6>任务信息</h6>
          <div class="row">
            <div class="col-md-6">
              <strong>任务ID:</strong> ${data.task_id || '-'}<br>
              <strong>任务名称:</strong> ${data.task_name || '-'}<br>
              <strong>状态:</strong> <span class="badge bg-${getStatusBadgeClass(data.status)}">${getStatusText(data.status)}</span>
            </div>
            <div class="col-md-6">
              <strong>开始时间:</strong> ${formatDateTime(data.start_time)}<br>
              <strong>结束时间:</strong> ${data.end_time ? formatDateTime(data.end_time) : '-'}<br>
              <strong>持续时间:</strong> ${data.duration || '-'}
            </div>
          </div>
        </div>
        <div>
          <h6>执行日志</h6>
          <pre class="bg-light p-3 rounded" style="max-height: 400px; overflow-y: auto; font-size: 12px;">${currentLogContent}</pre>
        </div>
      `;
      
      const modal = new bootstrap.Modal(document.getElementById('logDetailModal'));
      modal.show();
    })
    .catch(error => {
      console.error('加载日志详情失败:', error);
      showAlert('加载日志详情失败', 'danger');
    });
}

function killTask(logId) {
  if (!confirm('确定要终止这个任务吗？')) {
    return;
  }
  
  fetch(`/api/task-logs/${logId}/kill`, {
    method: 'POST'
  })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        showAlert('任务已终止', 'success');
        loadTaskLogs(currentPage);
      } else {
        showAlert(data.message || '终止任务失败', 'danger');
      }
    })
    .catch(error => {
      console.error('终止任务失败:', error);
      showAlert('终止任务失败', 'danger');
    });
}

function copyLogContent() {
  if (!currentLogContent) {
    showAlert('没有可复制的内容', 'warning');
    return;
  }
  
  navigator.clipboard.writeText(currentLogContent).then(() => {
    showAlert('已复制到剪贴板', 'success');
  }).catch(() => {
    showAlert('复制失败', 'danger');
  });
}

function getStatusBadgeClass(status) {
  const statusMap = {
    'success': 'success',
    'failed': 'danger',
    'running': 'primary',
    'killed': 'warning',
    'pending': 'secondary',
    'skipped': 'info'
  };
  return statusMap[status] || 'secondary';
}

function getStatusText(status) {
  const statusMap = {
    'success': '成功',
    'failed': '失败',
    'running': '运行中',
    'killed': '已终止',
    'pending': '等待中',
    'skipped': '跳过'
  };
  return statusMap[status] || status;
}

function formatDateTime(dateTime) {
  if (!dateTime) return '-';
  return new Date(dateTime).toLocaleString('zh-CN');
}

</script>


{{template "footer" .}}
{{end}}