{{define "task/manage.tmpl"}}
{{template "header" .}}
{{template "common/confirm_modal.tmpl" .}}
{{template "common/alert.tmpl" .}}

<div class="container-fluid">
  <!-- 页面标题 -->
  <div class="d-flex justify-content-between align-items-center mb-4">
    <div>
      <h1 class="h3 mb-1">
        <i class="bi bi-gear-fill me-2 text-primary"></i>任务管理
      </h1>
      <p class="text-muted mb-0">管理任务配置和执行</p>
    </div>
    <a href="/tasks" class="btn btn-outline-secondary">
      <i class="bi bi-arrow-left me-1"></i>返回列表
    </a>
  </div>

  <!-- 任务概览卡片 -->
  <div class="row mb-4">
    <div class="col-md-8">
      <div class="card border-0 shadow-sm">
        <div class="card-header bg-primary text-white">
          <h5 class="card-title mb-0">
            <i class="bi bi-info-circle-fill me-2"></i>任务信息
          </h5>
        </div>
        <div class="card-body">
          <div class="row g-4">
            <div class="col-md-6">
              <div class="d-flex align-items-center">
                <div class="bg-light rounded-circle p-2 me-3">
                  <i class="bi bi-file-earmark-text text-primary"></i>
                </div>
                <div>
                  <small class="text-muted d-block">任务名称</small>
                  <span class="fw-bold fs-4">{{.Task.Name}}</span>
                </div>
              </div>
            </div>
            <div class="col-md-6">
              <div class="d-flex align-items-center">
                <div class="bg-light rounded-circle p-2 me-3">
                  <i class="bi bi-arrow-left-right text-primary"></i>
                </div>
                <div class="flex-grow-1">
                  <small class="text-muted d-block">数据流向</small>
                  <div class="d-flex align-items-center">
                    <span class="badge bg-primary fs-6 px-3 py-2">{{.Task.Source}}</span>
                    <i class="bi bi-arrow-right mx-3 text-muted"></i>
                    <span class="badge bg-success fs-6 px-3 py-2">{{.Task.Target}}</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="col-md-4">
      <div class="card border-0 shadow-sm">
        <div class="card-header bg-info text-white">
          <h5 class="card-title mb-0">
            <i class="bi bi-clock-fill me-2"></i>时间信息
          </h5>
        </div>
        <div class="card-body">
          <div class="mb-3">
            <small class="text-muted d-block">创建时间</small>
            <span class="fw-semibold">{{.Task.CreatedAt.Format "2006-01-02 15:04:05"}}</span>
          </div>
          <div>
            <small class="text-muted d-block">更新时间</small>
            <span class="fw-semibold">{{.Task.UpdatedAt.Format "2006-01-02 15:04:05"}}</span>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- JSON配置卡片 -->
  <div class="card border-0 shadow-sm mb-4">
    <div class="card-header bg-dark text-white">
      <h5 class="card-title mb-0">
        <i class="bi bi-code-square-fill me-2"></i>DataX 配置
      </h5>
    </div>
    <div class="card-body">
      <div class="d-flex gap-2 mb-3 flex-wrap">
        <button type="button" 
                class="btn btn-outline-primary" 
                onclick="toggleEditMode()"
                id="editBtn">
          <i class="bi bi-pencil me-1"></i>编辑配置
        </button>
        <button type="button" 
                class="btn btn-outline-info" 
                onclick="formatJSON()"
                id="formatBtn">
          <i class="bi bi-arrow-clockwise me-1"></i>格式化
        </button>
        <button type="button" 
                class="btn btn-outline-success" 
                onclick="copyJSON()"
                id="copyBtn">
          <i class="bi bi-clipboard me-1"></i>复制
        </button>
      </div>
      
      <div id="jsonDisplay" class="border rounded-3 p-3 bg-dark text-light" style="background: #1e1e1e !important;">
        <pre id="jsonContent" class="mb-0 font-monospace small" style="color: #d4d4d4; line-height: 1.5;">{{.Task.JsonConfig}}</pre>
      </div>
      
      <div id="jsonEdit" style="display:none;">
        <div class="position-relative">
          <textarea class="form-control font-monospace border-0 rounded-3" 
                    rows="15" 
                    id="jsonTextarea"
                    style="background: #1e1e1e; color: #d4d4d4; resize: vertical; font-size: 14px; line-height: 1.5;">{{.Task.JsonConfig}}</textarea>
          <div class="position-absolute top-0 end-0 p-2">
            <small class="text-muted">JSON 编辑器</small>
          </div>
        </div>
        <div class="d-flex gap-2 mt-3">
          <button type="button" 
                  class="btn btn-success" 
                  onclick="saveJSON()"
                  id="saveBtn">
            <i class="bi bi-check-circle me-1"></i>保存配置
          </button>
          <button type="button" 
                  class="btn btn-outline-secondary" 
                  onclick="cancelEdit()"
                  id="cancelBtn">
            <i class="bi bi-x-circle me-1"></i>取消编辑
          </button>
        </div>
      </div>
    </div>
  </div>

</div>


<script>
let isEditMode = false;
let originalJSON = '';

function toggleEditMode() {
  const jsonDisplay = document.getElementById('jsonDisplay');
  const jsonEdit = document.getElementById('jsonEdit');
  const editBtn = document.getElementById('editBtn');
  
  if (!isEditMode) {
    // 进入编辑模式
    originalJSON = document.getElementById('jsonContent').textContent;
    document.getElementById('jsonTextarea').value = originalJSON;
    
    jsonDisplay.style.display = 'none';
    jsonEdit.style.display = 'block';
    editBtn.innerHTML = '<i class="bi bi-eye me-1"></i>预览模式';
    editBtn.classList.remove('btn-outline-primary');
    editBtn.classList.add('btn-outline-secondary');
    isEditMode = true;
  } else {
    // 退出编辑模式
    jsonDisplay.style.display = 'block';
    jsonEdit.style.display = 'none';
    editBtn.innerHTML = '<i class="bi bi-pencil me-1"></i>编辑配置';
    editBtn.classList.remove('btn-outline-secondary');
    editBtn.classList.add('btn-outline-primary');
    isEditMode = false;
  }
}

function formatJSON() {
  const jsonContent = document.getElementById('jsonContent');
  const jsonTextarea = document.getElementById('jsonTextarea');
  
  try {
    const obj = JSON.parse(jsonContent.textContent);
    const formatted = JSON.stringify(obj, null, 2);
    
    if (isEditMode) {
      jsonTextarea.value = formatted;
    } else {
      jsonContent.textContent = formatted;
    }
    
    showAlert('JSON 格式化完成', 'success');
  } catch (err) {
    showAlert('JSON 格式错误：' + err.message, 'danger');
  }
}

function copyJSON() {
  const jsonContent = document.getElementById('jsonContent').textContent;
  
  navigator.clipboard.writeText(jsonContent).then(() => {
    showAlert('已复制到剪贴板', 'success');
  }).catch(() => {
    showAlert('复制失败', 'danger');
  });
}

function saveJSON() {
  const jsonTextarea = document.getElementById('jsonTextarea');
  const jsonContent = document.getElementById('jsonContent');
  
  try {
    // 验证 JSON 格式
    const obj = JSON.parse(jsonTextarea.value);
    
    // 提交表单
    const form = document.createElement('form');
    form.method = 'POST';
    form.action = '/tasks/{{.Task.ID}}';
    
    const methodInput = document.createElement('input');
    methodInput.type = 'hidden';
    methodInput.name = '_method';
    methodInput.value = 'PUT';
    form.appendChild(methodInput);
    
    const jsonInput = document.createElement('input');
    jsonInput.type = 'hidden';
    jsonInput.name = 'datax_json';
    jsonInput.value = jsonTextarea.value;
    form.appendChild(jsonInput);
    
    document.body.appendChild(form);
    form.submit();
  } catch (err) {
    showAlert('JSON 格式错误：' + err.message, 'danger');
  }
}

function cancelEdit() {
  const jsonDisplay = document.getElementById('jsonDisplay');
  const jsonEdit = document.getElementById('jsonEdit');
  const editBtn = document.getElementById('editBtn');
  
  jsonDisplay.style.display = 'block';
  jsonEdit.style.display = 'none';
  editBtn.innerHTML = '<i class="bi bi-pencil me-1"></i>编辑配置';
  editBtn.classList.remove('btn-outline-secondary');
  editBtn.classList.add('btn-outline-primary');
  isEditMode = false;
}


// 页面加载完成后初始化
document.addEventListener('DOMContentLoaded', function() {
  // 格式化初始 JSON
  formatJSON();
});
</script>

{{template "footer" .}}
{{end}}