{{define "taskflow/flow.tmpl"}}
{{template "header" .}}
{{template "common/confirm_modal.tmpl" .}}
{{template "common/alert.tmpl" .}}

<div class="container-fluid">
  <!-- 页面标题 -->
  <div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="h4 mb-0 text-muted">{{.Name}} - 流程编辑</h1>
    <div class="d-flex gap-2">
      <a href="/task-flows" class="btn btn-outline-secondary btn-sm">
        <i class="bi bi-arrow-left me-1"></i>返回
      </a>
      <a href="/task-flows/{{.FlowID}}" class="btn btn-outline-primary btn-sm">
        <i class="bi bi-gear me-1"></i>设置
      </a>
    </div>
  </div>

  <!-- 操作按钮 -->
  <div class="row mb-4">
    <div class="col-12">
      <div class="d-flex justify-content-start gap-2">
        <button type="button" 
                class="btn btn-primary" 
                data-bs-toggle="modal" 
                data-bs-target="#addStepModal">
          <i class="bi bi-plus me-1"></i>添加步骤
        </button>
        <button type="button" 
                class="btn btn-success"
                onclick="showRunConfirm('任务流 \'{{.Name}}\'', '/task-flows/{{.FlowID}}/run', null, '任务流将按照配置的步骤顺序立即执行。')">
          <i class="bi bi-play me-1"></i>立即执行
        </button>
      </div>
    </div>
  </div>

  <!-- 流程图 -->
  <div class="row">
    <div class="col-12">
      <div class="card border-0 shadow-sm">
        <div class="card-header bg-info text-white d-flex justify-content-between align-items-center">
          <h5 class="card-title mb-0">
            <i class="bi bi-diagram-3 me-2"></i>任务流程
          </h5>
          <span class="fw-bold" style="font-size: 14px;">
            <i class="bi bi-info-circle me-1"></i>拖拽步骤可调整执行顺序
          </span>
        </div>
        <div class="card-body p-3">
          {{if .Steps}}
          <div class="flow-steps" id="flowSteps">
            {{range $index, $step := .Steps}}
            <div class="flow-step mb-3" data-step-id="{{$step.ID}}" data-step-order="{{$step.StepOrder}}" draggable="true">
              <!-- 步骤卡片 - 简化设计 -->
              <div class="card border-0 shadow-sm step-card" style="cursor: move; max-width: 220px; margin: 0 auto;">
                <div class="card-header bg-gradient text-white py-2 px-3" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
                  <div class="d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                      <div class="bg-white text-dark rounded-circle d-flex align-items-center justify-content-center me-2 drag-handle" style="width: 28px; height: 28px; cursor: grab;">
                        <i class="bi bi-grip-vertical text-muted" style="font-size: 14px;"></i>
                      </div>
                      <div>
                        <span class="fw-bold" style="font-size: 16px;">步骤 {{$step.StepOrder}}</span>
                      </div>
                    </div>
                    <button type="button" 
                            class="btn btn-danger btn-sm" 
                            onclick="removeStep({{$step.ID}}, '{{$step.TaskName}}')"
                            title="删除步骤"
                            style="padding: 0.3rem 0.6rem; font-size: 14px;">
                      <i class="bi bi-trash"></i>
                    </button>
                  </div>
                </div>
                <div class="card-body py-3 px-3 text-center">
                  <h6 class="mb-2 fw-bold" style="font-size: 16px; line-height: 1.3;">
                    <a href="/tasks/{{$step.TaskID}}" class="text-decoration-none text-dark">
                      {{$step.TaskName}}
                    </a>
                  </h6>
                  {{if $step.TimeoutMinutes}}
                  <p class="text-muted mb-2" style="font-size: 13px;">
                    <i class="bi bi-clock me-1"></i>超时: {{$step.TimeoutMinutes}} 分钟
                  </p>
                  {{else}}
                  <p class="text-muted mb-2" style="font-size: 13px;">
                    <i class="bi bi-clock me-1"></i>使用默认超时
                  </p>
                  {{end}}
                  <a href="/tasks/{{$step.TaskID}}" class="btn btn-outline-primary btn-sm w-100" style="font-size: 14px; padding: 0.4rem 0.8rem;">
                    <i class="bi bi-eye me-1"></i>查看任务
                  </a>
                </div>
              </div>
              
              <!-- 连接箭头 -->
              <div class="text-center my-2 step-arrow" data-index="{{$index}}" data-total="{{len $.Steps}}">
                <div class="d-inline-flex align-items-center justify-content-center bg-light rounded-circle" style="width: 28px; height: 28px;">
                  <i class="bi bi-arrow-down text-primary" style="font-size: 14px;"></i>
                </div>
              </div>
            </div>
            {{end}}
          </div>
          {{else}}
          <div class="text-center text-muted py-4">
            <div class="mb-3">
              <i class="bi bi-diagram-2 display-4 text-muted"></i>
            </div>
            <h5 class="mb-2">暂无任务步骤</h5>
            <p class="mb-3 text-muted">点击"添加步骤"开始创建任务流程</p>
            <button type="button" 
                    class="btn btn-primary" 
                    data-bs-toggle="modal" 
                    data-bs-target="#addStepModal">
              <i class="bi bi-plus me-1"></i>添加第一个步骤
            </button>
          </div>
          {{end}}
        </div>
      </div>
    </div>
  </div>
</div>

<!-- 添加步骤模态框 -->
<div class="modal fade" id="addStepModal" tabindex="-1" aria-labelledby="addStepModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content border-0 shadow">
      <div class="modal-header bg-primary text-white">
        <h5 class="modal-title" id="addStepModalLabel">
          <i class="bi bi-plus-circle me-2"></i>添加任务步骤
        </h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <form id="addStepForm" method="post" action="/task-flows/{{.FlowID}}/steps">
        <div class="modal-body p-4">
          <div class="row">
            <div class="col-md-8">
              <div class="mb-4">
                <label for="taskSelect" class="form-label fw-bold">
                  <i class="bi bi-list-task me-1"></i>选择任务 <span class="text-danger">*</span>
                </label>
                <select class="form-select form-select-lg" id="taskSelect" name="task_id" required>
                  <option value="">请选择要添加的任务...</option>
                  {{range .AvailableTasks}}
                  <option value="{{.ID}}">{{.Name}}</option>
                  {{end}}
                </select>
                <div class="form-text">
                  <i class="bi bi-info-circle me-1"></i>只能选择未在其他流程中的任务
                </div>
              </div>
            </div>
            <div class="col-md-4">
              <div class="mb-4">
                <label for="timeoutMinutes" class="form-label fw-bold">
                  <i class="bi bi-clock me-1"></i>超时时间
                </label>
                <div class="input-group">
                  <input type="number" 
                         class="form-control form-control-lg" 
                         id="timeoutMinutes" 
                         name="timeout_minutes" 
                         placeholder="30"
                         min="1">
                  <span class="input-group-text">分钟</span>
                </div>
                <div class="form-text">
                  <i class="bi bi-lightbulb me-1"></i>留空使用默认超时时间
                </div>
              </div>
            </div>
          </div>
          
          {{if .AvailableTasks}}
          <div class="alert alert-info">
            <i class="bi bi-info-circle me-2"></i>
            <strong>可用任务:</strong> 共 {{len .AvailableTasks}} 个任务可供选择
          </div>
          {{else}}
          <div class="alert alert-warning">
            <i class="bi bi-exclamation-triangle me-2"></i>
            <strong>暂无可用任务:</strong> 所有任务都已被添加到其他流程中
          </div>
          {{end}}
        </div>
        <div class="modal-footer bg-light">
          <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
            <i class="bi bi-x me-1"></i>取消
          </button>
          <button type="submit" class="btn btn-primary" {{if not .AvailableTasks}}disabled{{end}}>
            <i class="bi bi-plus me-1"></i>添加步骤
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
let draggedElement = null;
let draggedIndex = -1;

function removeStep(stepId, stepName) {
  const flowId = '{{.FlowID}}';
  showDeleteConfirm(`步骤 "${stepName}"`, `/task-flows/${flowId}/steps/${stepId}`, null, '确定要删除此步骤吗？此操作不可恢复！');
}

// 拖拽排序功能
function initDragAndDrop() {
  const flowSteps = document.getElementById('flowSteps');
  if (!flowSteps) return;

  // 拖拽开始
  flowSteps.addEventListener('dragstart', function(e) {
    if (e.target.closest('.flow-step')) {
      draggedElement = e.target.closest('.flow-step');
      draggedIndex = Array.from(flowSteps.children).indexOf(draggedElement);
      draggedElement.style.opacity = '0.5';
      e.dataTransfer.effectAllowed = 'move';
    }
  });

  // 拖拽结束
  flowSteps.addEventListener('dragend', function(e) {
    if (draggedElement) {
      draggedElement.style.opacity = '1';
      draggedElement = null;
      draggedIndex = -1;
    }
  });

  // 拖拽悬停
  flowSteps.addEventListener('dragover', function(e) {
    e.preventDefault();
    e.dataTransfer.dropEffect = 'move';
    
    const afterElement = getDragAfterElement(flowSteps, e.clientY);
    if (afterElement == null) {
      flowSteps.appendChild(draggedElement);
    } else {
      flowSteps.insertBefore(draggedElement, afterElement);
    }
    
    // 实时更新箭头显示
    updateArrows();
  });

  // 拖拽放置
  flowSteps.addEventListener('drop', function(e) {
    e.preventDefault();
    if (draggedElement) {
      // 更新箭头显示
      updateArrows();
      // 显示确认保存按钮
      showSaveButton();
    }
  });
}

// 获取拖拽后的位置元素
function getDragAfterElement(container, y) {
  const draggableElements = [...container.querySelectorAll('.flow-step:not(.dragging)')];
  
  return draggableElements.reduce((closest, child) => {
    const box = child.getBoundingClientRect();
    const offset = y - box.top - box.height / 2;
    
    if (offset < 0 && offset > closest.offset) {
      return { offset: offset, element: child };
    } else {
      return closest;
    }
  }, { offset: Number.NEGATIVE_INFINITY }).element;
}

// 显示保存按钮
function showSaveButton() {
  // 移除已存在的保存按钮
  const existingBtn = document.getElementById('saveOrderBtn');
  if (existingBtn) {
    existingBtn.remove();
  }
  
  // 创建保存按钮
  const saveBtn = document.createElement('div');
  saveBtn.id = 'saveOrderBtn';
  saveBtn.className = 'text-center mt-3';
  saveBtn.innerHTML = `
    <button type="button" class="btn btn-success btn-lg" onclick="confirmSaveOrder()">
      <i class="bi bi-check-circle me-2"></i>确认保存新顺序
    </button>
    <button type="button" class="btn btn-outline-secondary btn-lg ms-2" onclick="cancelSaveOrder()">
      <i class="bi bi-x-circle me-2"></i>取消
    </button>
  `;
  
  // 插入到流程图卡片中
  const cardBody = document.querySelector('.card-body');
  cardBody.appendChild(saveBtn);
}

// 取消保存
function cancelSaveOrder() {
  // 重新加载页面恢复原始顺序
  location.reload();
}

// 确认保存顺序
function confirmSaveOrder() {
  const flowSteps = document.getElementById('flowSteps');
  const steps = flowSteps.querySelectorAll('.flow-step');
  const stepIds = [];
  
  steps.forEach((step, index) => {
    const stepId = step.getAttribute('data-step-id');
    stepIds.push(stepId);
    
    // 更新步骤编号显示
    const stepOrderSpan = step.querySelector('span.fw-bold');
    if (stepOrderSpan) {
      stepOrderSpan.textContent = `步骤 ${index + 1}`;
    }
  });
  
  // 更新箭头显示
  updateArrows();
  
  // 发送更新请求
  updateStepOrderOnServer(stepIds);
}

// 更新箭头显示
function updateArrows() {
  const arrows = document.querySelectorAll('.step-arrow');
  arrows.forEach((arrow, index) => {
    const total = arrows.length;
    if (index === total - 1) {
      arrow.style.display = 'none';
    } else {
      arrow.style.display = 'block';
    }
  });
}

// 更新步骤顺序（保留原函数用于其他用途）
function updateStepOrders() {
  confirmSaveOrder();
}

// 发送步骤顺序更新到服务器
function updateStepOrderOnServer(stepIds) {
  const flowId = '{{.FlowID}}'.trim();
  const formData = new FormData();
  
  stepIds.forEach((stepId, index) => {
    formData.append('step_orders[]', stepId);
  });
  
  // 隐藏保存按钮
  const saveBtn = document.getElementById('saveOrderBtn');
  if (saveBtn) {
    saveBtn.style.display = 'none';
  }
  
  fetch(`/task-flows/${flowId}/steps/reorder`, {
    method: 'PUT',
    body: formData
  })
  .then(response => response.json())
  .then(data => {
    if (data.message) {
      showAlert(data.message, 'success');
    }
    // 重新加载页面以显示新顺序
    setTimeout(() => {
      location.reload();
    }, 1000);
  })
  .catch(error => {
    console.error('保存顺序失败:', error);
    showAlert('保存顺序失败，请重试', 'danger');
    // 显示保存按钮
    if (saveBtn) {
      saveBtn.style.display = 'inline-block';
    }
  });
}

// 页面加载完成后初始化
document.addEventListener('DOMContentLoaded', function() {
  initDragAndDrop();
  
  // 处理步骤箭头的显示
  document.querySelectorAll('.step-arrow').forEach(arrow => {
    const index = parseInt(arrow.getAttribute('data-index'));
    const total = parseInt(arrow.getAttribute('data-total'));
    if (index === total - 1) {
      arrow.style.display = 'none';
    }
  });
});
</script>

{{template "footer" .}}
{{end}}